---
- name: Provision "{{ ec2_count }}" instance(s) with hostname "{{ ec2_tag_Name }}"
  ec2:
    key_name: "{{ ec2_keypair }}"
    group: "{{ ec2_security_group }}"
    instance_type: "{{ ec2_instance_type }}"
    image: "{{ ec2_image }}"
    vpc_subnet_id: "{{ ec2_subnet_id }}"
    zone: "{{ ec2_zone }}"
    region: "{{ ec2_region }}"
    instance_tags: '{"Type":"{{ec2_instance_type}}", "Name":"{{ec2_tag_Name}}", "Services":"{{ec2_tag_Services}}", "Backup":"{{ec2_tag_Backup}}"}'
    assign_public_ip: yes
    wait: true
    exact_count: "{{ ec2_count }}"
    count_tag:
      Name: "{{ ec2_tag_Name }}"
          #        volumes:
          #- device_name: /dev/xvda
          #  volume_type: gp2
          #  volume_size: "{{ ec2_volume_size }}"
          #  delete_on_termination: true
  register: ec2

- name: Add host "{{ ec2_tag_Name }}" to host inventory list
  add_host:
    name: "{{ ec2_tag_Name }}"
    #    groups: tag_Type_{{ec2_instance_type}}
    ec2_zone: "{{ ec2_zone }}"
    ec2_region: "{{ ec2_region }}"
    ec2_tag_Type: "{{ ec2_instance_type}}"
    ec2_tag_Name: "{{ ec2_tag_Name }}"
    ec2_tag_Backup: "{{ ec2_tag_Backup }}"
    ec2_tag_Services: "{{ ec2_tag_Services }}"
    ec2_ip_address: "{{ item.private_ip }}"
  with_items: "{{ ec2.instances }}"

- name: Wait for the instances to boot by checking the ssh port
  wait_for: 
    host: "{{item.public_ip}}"
    port: 22 
    delay: 15 
    timeout: 300 
    state: started
  with_items: "{{ ec2.instances }}"
  when: ec2_tag_Name | lower == "gold"

- name: Wait for the instances to boot by checking the ssh port
  wait_for: 
    host: "{{item.private_ip}}"
    port: 22 
    delay: 15 
    timeout: 300 
    state: started
  with_items: "{{ ec2.instances }}"
  when: ec2_tag_Name | lower != "gold"

- name: Refresh hosts inventory list
  meta: refresh_inventory

- name: Update dns server
  become: true
  shell: "echo local-data-ptr: \"{{ item.private_ip}}        {{ ec2_tag_Name }}\" >> /etc/unbound/unbound.conf.d/5-static-conf"  
  with_items: "{{ ec2.instances }}"
  when: ec2_tag_Name | lower != "gold"
  
- name: Update dns server
  become: true
  shell: "echo local-data: \"{{ ec2_tag_Name }}.         {{ item.private_ip}}\" >> /etc/unbound/unbound.conf.d/5-static-conf"
  with_items: "{{ ec2.instances }}"
  when: ec2_tag_Name | lower != "gold"

- name: Restart unbound
  become: true
  service:
    name: unbound
    state: restarted
  when: ec2_tag_Name | lower != "gold"
